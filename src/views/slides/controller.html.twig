<!-- Controller -->
<section>
    <div class="stretch" data-markdown>
    <script type="text/template">
## The old PHP days
```
<?php include("header.php"); ?>
<html>
<head>
<title><?php echo "My title" . $companyName;?></title>
</head>
<body>
<?php
echo "<h1>" . $companyName . "</h1>";
?>
</body>
</html>
<?php mysql_close(); ?>
```
    </script>
    </div>
</section>

<section>
    <h2>The solution ?</h2>
    <p class="fragment">Building my own framework</p>
    <p class="fragment">Seperating logic &amp; design</p>
    <p class="fragment">And it was awesome! </p>
    <div class="stretch">
        <img class="fragment" src="images/helicopter1.jpg" style="float: left;"> <img style="float: right;" class="fragment" src="images/helicopter2.jpg" /></p>
    </div>
</section>

<section>
    <div class="stretch" data-markdown>
        <script type="text/template">
## A true MVC framework
```
// controller/defaultController.php
public function indexAction(Request $request) {
    $page = $this->contentService->getPage();
    return new Response($this->viewEngine->render("index.html.twig", $page);
}
```
        </script>
    </div>
</section>

<section>
    <div class="stretch" data-markdown>
        <script type="text/template">
## But then we do this...
```
<body>
<h1>My title</h1>
<div class="slider">...</div>
< script src="js/jquery.js">< /script>
< script src="js/slider.js">< /script>
< script>
    $(window).ready(function() {
        $(".slider").slider();
    });
< /script>
<form class="login">...</form>
< script>
$("form").on("submit", function() {
  // do some validation
});
< /script>
</body>
```
        </script>
    </div>
</section>

<section>
    <div class="stretch" data-markdown>
        <script type="text/template">
## It can get worse
```
var a;
if (window.location.getParameter('lat')) {

var _q = window.location;
map.setCenter(new GLatLng((_q.getParameter('lat')), (_q.getParameter('lon'))), parseInt(_q.getParameter('zoom')));
loadSurroundingResults(heleMarkers);
} else if(window.location.hash.length > 1 && (a = window.location.hash.substr(1).split(';')).length == 2) {
map.setCenter(GLatLng.fromUrlValue(a[0]), parseInt(a[1], 10));
loadSurroundingResults(heleMarkers);
} else {
<?php // possibly not used anymore! Modified @ 16-Feb-2012
if($auto_expand && $zoom && $lat && $lng && $zoom >= 12 && $lat > 0 && $lng > 0):
if(!empty($_GET['lat'])) $lat = $_GET['lat'];
if(!empty($_GET['lng'])) $lon = $_GET['lng'];
?>
<?php endif; ?>
<?php if($swlat && $swlon && $nelat && $nelon): $sw = array($swlat, $swlon); $ne = array($nelat, $nelon); ?>
map.setCenter(
(new GLatLngBounds(new GLatLng(<?php echo $sw[0], ',', $sw[1]; ?>), new GLatLng(<?php echo $ne[0], ',', $ne[1]; ?>))).getCenter(), 10
);
<?php if(empty($vertices)): ?>
loadSurroundingResults(heleMarkers, 1);
<?php else: ?>
loadSurroundingResults(heleMarkers, 2);
<?php endif; ?>
<?php else:
$lat = empty($latlon) ? '50.876700000' : $latlon[0]->lat; $lon = empty($latlon) ? '4.696800000' : $latlon[0]->lon;
if(!empty($_GET['lat'])) $lat = $_GET['lat'];
if(!empty($_GET['lng'])) $lon = $_GET['lng'];
?>
// else
map.setCenter(new GLatLng(<?php echo $lat, ',', $lon; ?>),<?php echo !empty($zoom)?$zoom:12; ?>);
loadSurroundingResults(heleMarkers);
<?php endif; ?>
}
```
        </script>
    </div>
</section>
<section>
    <h2>We must do better</h2>
    <img class="fragment" src="images/helicopter1.jpg" />
    <p class="fragment">
        <small>For real, this time!</small>
    </p>
</section>
<section>
    <h2>The solution</h2>
    <p>Take CONTROL of your code</p>
    <p class="fragment">Meet the CONTROLLER</p>
</section>
<section>
    <h2>The controller...</h2>
    <p class="fragment">has a monogamous relationship with the page<br /><small>(Every type of page will have its own controller)</small></p>
    <p class="fragment">will initialize all components in the page</p>
    <p class="fragment">will not be declared inline. Inline code should be limited to instanciating the controller</p>
</section>
<section>
    <div data-markdown>
        <script type="text/template">
## A controller would look like this
```
// js/controller/ContactPageController.js
var MyApp = MyApp || {};
MyApp.ContactPageController = function(options) {
    $(".slider").slider();
    this.initMap(options.mapCoords);
    this.setupValidation(options.form);
}
```
        </script>
    </div>
    <div class="fragment" data-markdown>
        <script type="text/template">
## Using the controller
```
// inline javascript (at the bottom of the page)
var controller = new MyApp.ContactPageController({
    form: $("form.contact"),
    mapCoords: [50.1155456, 4.4499995]
});
```
        </script>
    </div>
</section>

<section>
    <h2>PRO</h2>
    <p class="fragment">Inline Javascript kept to a minimum: smaller HTML!</p>
    <p class="fragment">Maintain overview of everything happening in the page, easier to debug</p>
    <p class="fragment">Controller is being cached by the browser: improved page speed!</p>
</section>

<section>
    <h2>CON</h2>
    <p class="fragment">None that I'm aware of</p>
    <h1 class="fragment">Pure win</h1>
</section>